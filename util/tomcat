#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
import sys
import os.path
import subprocess
from optparse import OptionParser

TOMCAT_HOME="/home/donghua/software/apache-tomcat-8.5.41/"

BIN_DIR= os.path.join(TOMCAT_HOME, "bin")

def exec_cmd(cmd,shell=True):
    proc = subprocess.Popen(cmd, shell=shell, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    data, err = proc.communicate()
    return data, err

def exec_status(cmd, shell=True):
    proc = subprocess.Popen(cmd, shell=True)
    proc.communicate()
    return proc.returncode

def tomcat_id():
    cmd = "ps -ef | grep {} | grep -v grep".format(BIN_DIR)
    data, err = exec_cmd(cmd)
    
    items = data.split()
    print items
    print len(items)
    if len(items) == 0:
        return -1
    proc_id = items[1]

    proc_dir="/proc/{}".format(proc_id)
    if os.path.exists(proc_dir):
        print "tomcat id {}".format(proc_id)
        return proc_id
    return -1
        
def stop_tomcat():
    pid = tomcat_id()
    if pid == -1:
        print "tomcat is already stoped"
        return
    
    cmd = "kill -9 {}".format(pid)
    retcode= exec_status(cmd)
    if retcode == 0:
        print "stop tomcat successful"
    else:
        print "stop tomcat failure" 
     
def start_tomcat():
    pid = tomcat_id()
    if pid != -1:
        print "tomcat is already running"
        return

    os.chdir(BIN_DIR)
    print os.getcwd()

    data, err = exec_cmd("./startup.sh")
    print data

def tomcat_status():
    pid = tomcat_id()
    if pid != -1:
        print "tomcat is stoped"
    else:
        print "tomcat is running"

if __name__ == '__main__':
    
    size = len(sys.argv)
    if size != 2:
        print "tomcat start|stop|status"
        sys.exit(-1)
    cmd = sys.argv[1]
    
    if cmd == 'start':
        start_tomcat()
    elif cmd == 'stop':
        stop_tomcat()
    else:
        tomcat_status()
